@page
@model sisnet.Pages.IndexModel
@{
    ViewData["Title"] = "SISNET";
}

<div class="search-page-container">
    <div class="search-bar-container">
        <span class="sisnet">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-audio-lines"><path d="M2 10v3" /><path d="M6 6v11" /><path d="M10 3v18" /><path d="M14 8v7" /><path d="M18 5v13" /><path d="M22 10v3" /></svg>
            SISNET
        </span>
        <h1>Hear it. Love it. Find it fast.</h1>
        <div class="search-input-container">
            <svg class="search-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="11" cy="11" r="8" /><line x1="21" y1="21" x2="16.65" y2="16.65" /></svg>
            <input type="text" id="searchBox" class="search-box" placeholder="Track name, artist name..." oninput="searchSongs(1)" />
        </div>
    </div>
    <div id="results-container" class="results-container">
        <div class="filters">
            <label class="label" for="pageSize">Songs per page:</label>
            <select class="songs-per-page" id="pageSize" onchange="searchSongs(1)">
                <option value="5">5</option>
                <option value="10" selected>10</option>
                <option value="15">15</option>
                <option value="20">20</option>
            </select>

            <div class="release-date">
                <span class="label">Release year:</span>
                <div class="release-range">
                    <input type="text" id="startYear" placeholder="e.g., 2010" maxlength="4" oninput="searchSongs(1)" onkeypress="return isNumberKey(event)" />
                    <label class="label mid-label" for="endYear"> to </label>
                    <input type="text" id="endYear" placeholder="e.g., 2012" maxlength="4" oninput="searchSongs(1)" onkeypress="return isNumberKey(event)" />
                </div>
            </div>

            <div class="genre-filter">
                <label class="label" for="genreSelect">Genres:</label>
                <div class="genre-options" id="genreOptions">
                </div>
            </div>
        </div>
        <div class="search-results">
            <ul id="results"></ul>
            <div class="pagination-controls">
                <button id="prevPage" onclick="changePage(-1)">Previous</button>
                <button id="nextPage" onclick="changePage(1)">Next</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentPage = 1;

        document.addEventListener('DOMContentLoaded', function () {
            searchSongs();
        });

        fetchGenres();

        async function fetchGenres() {
            const response = await fetch(`/Index?handler=Genres`);
            const genres = await response.json();
            const genreOptionsContainer = document.getElementById('genreOptions');
            
            genres.forEach(genre => {
                const label = document.createElement('label');
                label.innerHTML = `<input type="checkbox" value="${genre.key}" class="genre-checkbox" onchange="searchSongs(1)"> ${genre.value}`;
                genreOptionsContainer.appendChild(label);
            });
        }

        async function searchSongs(newPage) {
            const query = document.getElementById('searchBox').value.trim();
            const pageSize = document.getElementById('pageSize').value;
            const startYear = document.getElementById('startYear').value;
            const endYear = document.getElementById('endYear').value;
            const genres = Array.from(document.querySelectorAll('.genre-checkbox:checked')).map(cb => cb.value);

            currentPage = newPage;
            let response;

            if (query !== '') {
                let url = `/Index?handler=SearchSongs&query=${query}&currentPage=${currentPage}&pageSize=${pageSize}`;
                if (genres.length > 0) url += `&genres=${genres}`;
                if (startYear) url += `&startYear=${startYear}`;
                if (endYear) url += `&endYear=${endYear}`;
                response = await fetch(url);
            } else {
                response = await fetch(`/Index?handler=TrendingSongs&pageSize=${pageSize}`);
            }

            const resultsContainer = document.getElementById('results-container');
            if (resultsContainer) {
                if (pageSize == 15 || pageSize == 20) {
                    resultsContainer.classList.add('padded-results');
                } else {
                    resultsContainer.classList.remove('padded-results');
                }
            }

            const results = await response.json();
            const resultsList = document.getElementById('results');
            resultsList.innerHTML = '';

            results.forEach(song => {
                const li = document.createElement('li');
                li.innerHTML = `<div class="song-info">
                                    <svg class="play-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-music-2"><circle cx="8" cy="18" r="4"/><path d="M12 18V2l7 4"/></svg>
                                    <div class="song-details">
                                        <span class="track-name">${song.track_Name}</span>
                                        <span class="artist-name">${song.artist_Name}</span>
                                    </div>
                                </div>
                                <span class="duration">${song.duration_ms}</span>`;
                resultsList.appendChild(li);
            });

            document.getElementById('prevPage').disabled = currentPage <= 1 || query === '';
            document.getElementById('nextPage').disabled = results.length < pageSize || currentPage > 5 || query === '';
        }

        function changePage(delta) {
            currentPage += delta;
            searchSongs(currentPage);
        }

        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : evt.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }
    </script>
}
